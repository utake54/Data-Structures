
public class Stack {

	private ListNode top;
	private int length;
	private int capacity;

	public class ListNode {
		private int data;
		private ListNode next;

		public ListNode(int data) {
			this.data = data;
		}
	}

	public Stack(int capacity) {
		top = null;
		length = 0;
		this.capacity=capacity;
	}

	public void push(int data) {
		if(length==capacity) {
			throw new RuntimeException ("Stack is overflow");
		}
		ListNode temp = new ListNode(data);
		temp.next = top;
		top = temp;
		length++;
		System.out.println(data+ " is pushed in stack");
	}

	public void pop() {
		if (length == 0) {
			throw new RuntimeException("Stack is Underflow");
		}
System.out.println(top.data+" poped succesfully");
		top = top.next;
		length--;
	}
	public void peek() {
		if(length==0) {
			throw new RuntimeException ("Stack is underflow condition");
		}
		
		System.out.println("Top element is " +top.data);
	}
	
	public void display() {
		ListNode temp = top;
		while (temp != null) {
			System.out.print(temp.data + " ");
			temp = temp.next;
		}
	}
	
	public static void main(String[] args) {

		Stack stack = new Stack(5);
		stack.push(5);
		stack.push(10);
		stack.push(15);
		stack.push(20);
		stack.push(25);
		stack.peek();
		stack.pop();
		stack.peek();
		 System.out.println();
	}

}
